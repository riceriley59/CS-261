break main
r
n
n
n
print adjacency
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
nc
c
c
break main
r
n
n
n
n
break 33
c
print adjacecy
print adjacency
n
n
print adjacency
quit
break 3
break 33
r
c
n
print n_edges 
print n_nodes
break
quit
break main
r
n
n
print n_nodes
print nedged
print n_edges
n
n
break 33
c
print n_edges
print_n_nodes
print n_nodes
break dijkstra
r
n
print pq
print *pq
print pq->da
n
n
n
n
n
n
break 32
contine
c
n
n
print first
print &first
n
print pq_first_priority(pq)
print pq_first(pq)
n
n
print c
n
print popped
print popped->current
print popper->previous
print popped->prev
n
n
print c
print cost[popped->current]
n
n
n
n
n
n
print neighborcost
print neighborCost
n
n
print &first
n
n
n
n
n
n
n
n
print neighborCost
n
n
n
n
n
n
nn
n
n
quit
break dijkstra
r
n
n
break 32
c
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
print neighborCost
n
n
n
n
n
n
n
print neighborCost
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
print c
quit
break dijkstra
r
n
n
break 32
c
n
n
n
print pq->da[0]
print pq->da[0]->data
print pq->da[0]->data->start
print pq->da[0]->((struct dijNode*)data)->current
print pq_first(pq)
print pq_first(pq)->current
n
n
print c
n
print cost[popped->current]
n
n
print cost[popped->current]
n
n
print adj[popped->current][i]
n
n
print i
print adj[0][1]
bn
n
n
n
n
n
print pq_first(pq)
n
print i
print adj[0][2]
n
n
n
n
print new->current
print new->prev
print neighborCost
print c
n
n
n
n
n
n
n
print pq_first_priority)
print pq_first_priority(pq)
n
n
n
n
n
n
n
n
n
n
n
n
print n
n
n
n
n
print c
print popped->current
popped->prev
print popped->prev
print &popped
print pq->da[0]
print pq->da->data[0]
print pq->da->data[0]
quit
break main
r
quit
break main
clear
quit
break dijkstar
break dijkstra
r
n
break 32
c
n
n
n
print pq_first_prioriry
print pq_first_priority
print pq_first_priority(pq)
clear
n
printc
n
print c
n
n
n
n
n
n
n
n
print neighborCost 
n
print ne
print neighborCost 
n
n
n
n
n
print neighborCost 
n
print neighborCost 
n
n
n
print pq_first_priority(pq)
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
print pq_first_priority(pq)
n
n
print c
n
print popped->current
print popped->prev
print popped
print pq_remove_first(pq)
n
n
n
n
n
n
print neighborCost 
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
print c
n
print popped->current
popped->prev
print poppped->prev
print popped->prev
print popped->current
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
quit
break dijkstra
r
break 32
c
n
n
n
n
n
prin c
print c
n
print popped->current
print popped->prev
n
print c
n
n
n
n
n
n
n
print neighborCost
n
print new.current
n
print new.prev
print new.current
print neighborCost
print c
n
n
n
n
n
n
print new.current
print new.cprev
print new.prev
print neighborCost
n
n
n
n
n
n
n
n
n
n
n
n
print pq_first_priority(pq)
n
n
n
n
n
n
n
n
n
n
print c
n
print popped->prev
print popped->current
n
n
print c
n
print prev[4]
n
n
n
n
n
n
n
n
n
print neighborCost 
n
print neighborCost
print new.current
n
print new.current
print new.prev
n
n
n
n
n
n
n
n
n
n
print neighborCost
print popped->current
print new.current
clear
qut
quit
